{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","reducer","state","action","type","ACTIONS","MAKE_REQUEST","loading","jobs","GET_DATA","payload","ERROR","error","UPDATE_HAS_NEXT_PAGE","hasNextPage","Job","job","useState","open","setOpen","Card","Body","className","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b9a7508.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\nimport axios from 'axios'\nconst baseURL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return {loading: true, jobs: []}\n        case ACTIONS.GET_DATA:\n            return {...state, loading: false, jobs: action.payload.jobs}\n        case ACTIONS.ERROR: \n            return {...state, loading: false, error: action.payload.error, jobs: []}\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return {...state, hasNextPage: action.payload.hasNextPage}\n        default:\n            return state\n    }\n}\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true})\n\n    useEffect(() => {\n        const cancelToken1 = axios.CancelToken.source()\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\n        axios.get(baseURL, {\n            cancelToken: cancelToken1.token,\n            params: { markdown: true, page: page, ...params}\n        }).then(res => {\n            dispatch({type: ACTIONS.GET_DATA, payload: { jobs: res.data}})\n        }).catch(e => {\n            if (axios.isCancel(e)) return \n            dispatch({ type: ACTIONS.ERROR, payload: { error: e}})\n        })\n\n        const cancelToken2 = axios.CancelToken.source()\n        axios.get(baseURL, {\n            cancelToken: cancelToken2.token,\n            params: { markdown: true, page: page + 1, ...params}\n        }).then(res => {\n            dispatch({type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0}})\n           \n        }).catch(e => {\n            if (axios.isCancel(e)) return \n            dispatch({ type: ACTIONS.ERROR, payload: { error: e}})\n        })\n\n        return () => {\n            cancelToken1.cancel()\n            cancelToken2.cancel()\n        }\n    }, [params, page]) \n\n    return state\n}","import React, { useState } from 'react'\nimport { Card, Badge, Button, Collapse} from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Job( {job} ) {\n    const [open, setOpen] = useState(false)\n    return (\n        <Card>\n            <Card.Body>\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <Card.Title>\n                            {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\n                        </Card.Title>\n                        <Card.Subtitle className=\"text-muted mb-2\">\n                            {new Date(job.created_at).toLocaleDateString()}\n                        </Card.Subtitle>\n                        <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\n                        <Badge variant=\"secondary\">{job.location}</Badge>\n                        <div style={{wordBreak: 'break-all'}}>\n                            <ReactMarkdown source={job.how_to_apply}/>\n                        </div>\n                    </div>\n                <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo} />\n            </div>\n                <Card.Text>\n                    <Button onClick = {() => setOpen(prevOpen => !prevOpen)} \n                    variant=\"primary\"\n                    >\n                        {open ? 'Hide Details' : 'View Details'} \n                    </Button>\n                </Card.Text>\n                <Collapse in={open}>\n                    <div className=\"mt-4\">\n                        <ReactMarkdown source={job.description}/>\n                    </div>\n                </Collapse>\n            </Card.Body>\n        </Card>\n\n    )\n}\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nexport default function JobsPagination({page, setPage, hasNextPage}) {\n    function adjustPage(amount) {\n        setPage(prevPage => prevPage + amount)\n    }\n    return (\n        <Pagination>\n            {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)}/>}\n            {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\n            {page > 2 && <Pagination.Ellipsis/>}\n            {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page-1}</Pagination.Item>}            \n            <Pagination.Item active>{page}</Pagination.Item>\n            {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)}/>}\n        </Pagination>\n    )\n}\n","import React from 'react'\nimport {Form, Col} from 'react-bootstrap'\n\nexport default function SearchForm({params, onParamChange}) {\n    return (\n        <Form className=\"mb-4\">\n            <Form.Row>\n\n            </Form.Row>\n            <Form.Group as={Col}>\n                <Form.Label>Descripion</Form.Label>\n                <Form.Control onChange={onParamChange} value = {params.description}\n                name = \"description\" type=\"text\"/>\n            </Form.Group>\n\n            <Form.Group as={Col}>\n                <Form.Label>Location</Form.Label>\n                <Form.Control onChange={onParamChange} value = {params.location}\n                name = \"location\" type=\"text\"/>\n            </Form.Group>\n\n            <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n                <Form.Check onChange={onParamChange} value={params.full_time} name=\"full_time\" id=\"full-time\"\n                label=\"Only Full-Time Jobs\" type=\"checkbox\" className=\"mb-2\"/>\n            </Form.Group>\n        </Form>\n    )\n}\n","import React, { useState } from 'react'\nimport useFetchJobs from './useFetchJobs'\nimport { Container } from 'react-bootstrap'\nimport Job from './Job'\nimport JobsPagination from './JobsPagination'\nimport SearchForm from './SearchForm'\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  function handleParamChange(e) {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return {...prevParams, [param]: value}\n    })\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">Github Jobs</h1>\n      <SearchForm params = {params} onParamChange= {handleParamChange}/>\n      <JobsPagination page = {page} setPage ={setPage} hasNextPage={hasNextPage}/>\n      { loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Try Refreshing.</h1>}\n      {jobs.map(job => {\n        return <Job key={job.id} job={job}/>\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n    </Container>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}